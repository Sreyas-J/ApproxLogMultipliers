$date
	Sat Mar 15 08:54:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module array_multb $end
$var wire 8 ! s [7:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 8 $ expected [7:0] $end
$scope module uut $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 1 ' p00 $end
$var wire 1 ( p01 $end
$var wire 1 ) p02 $end
$var wire 1 * p03 $end
$var wire 1 + p10 $end
$var wire 1 , p11 $end
$var wire 1 - p12 $end
$var wire 1 . p13 $end
$var wire 1 / p20 $end
$var wire 1 0 p21 $end
$var wire 1 1 p22 $end
$var wire 1 2 p23 $end
$var wire 1 3 p30 $end
$var wire 1 4 p31 $end
$var wire 1 5 p32 $end
$var wire 1 6 p33 $end
$var wire 1 7 t6 $end
$var wire 1 8 t5 $end
$var wire 1 9 t4 $end
$var wire 1 : t3 $end
$var wire 1 ; t2 $end
$var wire 1 < t1 $end
$var wire 8 = s [7:0] $end
$var wire 1 > c9 $end
$var wire 1 ? c8 $end
$var wire 1 @ c7 $end
$var wire 1 A c6 $end
$var wire 1 B c5 $end
$var wire 1 C c4 $end
$var wire 1 D c3 $end
$var wire 1 E c2 $end
$var wire 1 F c11 $end
$var wire 1 G c10 $end
$var wire 1 H c1 $end
$scope module m1 $end
$var wire 1 ( a $end
$var wire 1 + b $end
$var wire 1 I cin $end
$var wire 1 H cout $end
$var wire 1 J sum $end
$var wire 1 K s1 $end
$var wire 1 L c2 $end
$var wire 1 M c1 $end
$scope module ha1 $end
$var wire 1 ( a $end
$var wire 1 + b $end
$var wire 1 M carry $end
$var wire 1 K sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 K a $end
$var wire 1 I b $end
$var wire 1 L carry $end
$var wire 1 J sum $end
$upscope $end
$upscope $end
$scope module m10 $end
$var wire 1 N cin $end
$var wire 1 G cout $end
$var wire 1 O sum $end
$var wire 1 P s1 $end
$var wire 1 Q c2 $end
$var wire 1 R c1 $end
$var wire 1 @ b $end
$var wire 1 8 a $end
$scope module ha1 $end
$var wire 1 R carry $end
$var wire 1 P sum $end
$var wire 1 @ b $end
$var wire 1 8 a $end
$upscope $end
$scope module ha2 $end
$var wire 1 P a $end
$var wire 1 N b $end
$var wire 1 Q carry $end
$var wire 1 O sum $end
$upscope $end
$upscope $end
$scope module m11 $end
$var wire 1 G cin $end
$var wire 1 F cout $end
$var wire 1 S sum $end
$var wire 1 T s1 $end
$var wire 1 U c2 $end
$var wire 1 V c1 $end
$var wire 1 ? b $end
$var wire 1 7 a $end
$scope module ha1 $end
$var wire 1 V carry $end
$var wire 1 T sum $end
$var wire 1 ? b $end
$var wire 1 7 a $end
$upscope $end
$scope module ha2 $end
$var wire 1 T a $end
$var wire 1 G b $end
$var wire 1 U carry $end
$var wire 1 S sum $end
$upscope $end
$upscope $end
$scope module m12 $end
$var wire 1 6 a $end
$var wire 1 F cin $end
$var wire 1 W cout $end
$var wire 1 X sum $end
$var wire 1 Y s1 $end
$var wire 1 Z c2 $end
$var wire 1 [ c1 $end
$var wire 1 > b $end
$scope module ha1 $end
$var wire 1 6 a $end
$var wire 1 [ carry $end
$var wire 1 Y sum $end
$var wire 1 > b $end
$upscope $end
$scope module ha2 $end
$var wire 1 Y a $end
$var wire 1 F b $end
$var wire 1 Z carry $end
$var wire 1 X sum $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 1 , a $end
$var wire 1 / b $end
$var wire 1 \ cin $end
$var wire 1 E cout $end
$var wire 1 < sum $end
$var wire 1 ] s1 $end
$var wire 1 ^ c2 $end
$var wire 1 _ c1 $end
$scope module ha1 $end
$var wire 1 , a $end
$var wire 1 / b $end
$var wire 1 _ carry $end
$var wire 1 ] sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 ] a $end
$var wire 1 \ b $end
$var wire 1 ^ carry $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 1 0 a $end
$var wire 1 3 b $end
$var wire 1 ` cin $end
$var wire 1 D cout $end
$var wire 1 ; sum $end
$var wire 1 a s1 $end
$var wire 1 b c2 $end
$var wire 1 c c1 $end
$scope module ha1 $end
$var wire 1 0 a $end
$var wire 1 3 b $end
$var wire 1 c carry $end
$var wire 1 a sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 a a $end
$var wire 1 ` b $end
$var wire 1 b carry $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope module m4 $end
$var wire 1 < a $end
$var wire 1 H b $end
$var wire 1 ) cin $end
$var wire 1 C cout $end
$var wire 1 d sum $end
$var wire 1 e s1 $end
$var wire 1 f c2 $end
$var wire 1 g c1 $end
$scope module ha1 $end
$var wire 1 < a $end
$var wire 1 H b $end
$var wire 1 g carry $end
$var wire 1 e sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 e a $end
$var wire 1 ) b $end
$var wire 1 f carry $end
$var wire 1 d sum $end
$upscope $end
$upscope $end
$scope module m5 $end
$var wire 1 ; a $end
$var wire 1 E b $end
$var wire 1 - cin $end
$var wire 1 B cout $end
$var wire 1 : sum $end
$var wire 1 h s1 $end
$var wire 1 i c2 $end
$var wire 1 j c1 $end
$scope module ha1 $end
$var wire 1 ; a $end
$var wire 1 E b $end
$var wire 1 j carry $end
$var wire 1 h sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 h a $end
$var wire 1 - b $end
$var wire 1 i carry $end
$var wire 1 : sum $end
$upscope $end
$upscope $end
$scope module m6 $end
$var wire 1 4 a $end
$var wire 1 D b $end
$var wire 1 1 cin $end
$var wire 1 A cout $end
$var wire 1 9 sum $end
$var wire 1 k s1 $end
$var wire 1 l c2 $end
$var wire 1 m c1 $end
$scope module ha1 $end
$var wire 1 4 a $end
$var wire 1 D b $end
$var wire 1 m carry $end
$var wire 1 k sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 k a $end
$var wire 1 1 b $end
$var wire 1 l carry $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$scope module m7 $end
$var wire 1 : a $end
$var wire 1 C b $end
$var wire 1 * cin $end
$var wire 1 @ cout $end
$var wire 1 n sum $end
$var wire 1 o s1 $end
$var wire 1 p c2 $end
$var wire 1 q c1 $end
$scope module ha1 $end
$var wire 1 : a $end
$var wire 1 C b $end
$var wire 1 q carry $end
$var wire 1 o sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 o a $end
$var wire 1 * b $end
$var wire 1 p carry $end
$var wire 1 n sum $end
$upscope $end
$upscope $end
$scope module m8 $end
$var wire 1 9 a $end
$var wire 1 B b $end
$var wire 1 . cin $end
$var wire 1 ? cout $end
$var wire 1 8 sum $end
$var wire 1 r s1 $end
$var wire 1 s c2 $end
$var wire 1 t c1 $end
$scope module ha1 $end
$var wire 1 9 a $end
$var wire 1 B b $end
$var wire 1 t carry $end
$var wire 1 r sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 r a $end
$var wire 1 . b $end
$var wire 1 s carry $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope module m9 $end
$var wire 1 5 a $end
$var wire 1 A b $end
$var wire 1 2 cin $end
$var wire 1 > cout $end
$var wire 1 7 sum $end
$var wire 1 u s1 $end
$var wire 1 v c2 $end
$var wire 1 w c1 $end
$scope module ha1 $end
$var wire 1 5 a $end
$var wire 1 A b $end
$var wire 1 w carry $end
$var wire 1 u sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 u a $end
$var wire 1 2 b $end
$var wire 1 v carry $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
1e
1d
0c
0b
0a
0`
0_
0^
1]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
b100 =
1<
0;
0:
09
08
07
06
05
04
03
02
01
00
1/
0.
0-
0,
0+
0*
0)
0(
0'
b1 &
b100 %
b100 $
b1 #
b100 "
b100 !
$end
#10000
1n
1O
1o
1P
0d
1:
18
0e
1h
1r
1J
0<
1;
19
1K
0]
1a
1k
b11011 !
b11011 =
1'
1(
0/
13
14
b11011 $
b11 #
b11 &
b1001 "
b1001 %
#20000
1G
0O
0o
1q
1R
0P
1W
1C
1[
1f
1>
1e
18
0w
1S
0J
1@
1v
0X
1<
1r
0A
0T
0K
0k
0d
b10101001 !
b10101001 =
1n
0p
1u
0Y
1]
19
0l
07
0(
04
1)
1*
15
16
1/
11
12
b10101001 $
b1101 #
b1101 &
b1101 "
b1101 %
#30000
0S
0G
0O
0@
0R
0P
0e
1o
0q
08
1J
0<
0C
0r
0>
0X
0W
1K
0]
0d
0f
1n
09
0v
0u
0Y
0[
b1010 !
b1010 =
0'
1(
0/
10
0)
0*
01
02
03
05
06
b1010 $
b10 #
b10 &
b101 "
b101 %
#40000
0o
0O
0:
0P
0h
0J
0@
0;
0K
1d
1n
0p
0a
b1101 !
b1101 =
1'
0(
1)
1*
00
b1101 $
b1101 #
b1101 &
b1 "
b1 %
#50000
1X
1F
1V
1?
1e
0O
1s
0S
1J
1<
1o
0P
1r
0T
1K
1]
1d
1n
1:
08
19
17
b1001110 !
b1001110 =
0'
1+
1/
0)
0*
1-
1.
11
12
b1001110 $
b110 "
b110 %
#60000
0S
0G
0F
1[
0e
0R
1O
0V
1>
1W
0<
0J
0C
0@
0o
1P
0?
07
1v
0X
0Z
0]
0K
1d
0f
b10011100 !
b10011100 =
1n
0p
0:
18
0s
1u
0Y
0/
0+
1)
1*
0-
0.
15
16
b10011100 $
b1100 #
b1100 &
b1101 "
b1101 %
#70000
1O
1P
18
1S
1J
0X
0W
1r
1T
0>
1K
1k
b110110 !
b110110 =
0n
0Y
0[
19
17
0v
1(
14
0*
06
01
02
b110110 $
b110 #
b110 &
b1001 "
b1001 %
#80000
1@
1p
1O
1o
1P
1:
08
1h
0r
1;
09
0d
b110010 !
b110010 =
0n
1a
0k
0u
0)
1*
10
04
12
05
b110010 $
b1010 #
b1010 &
b101 "
b101 %
#90000
1G
0O
1R
0P
0o
1q
1C
1f
1e
18
1S
1<
1@
1r
0T
1]
0d
0n
0p
19
07
b100011 !
b100011 =
1'
1/
1)
0*
11
02
b100011 $
b111 #
b111 &
#100000
